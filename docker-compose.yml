services:
  mysql:
    image: mysql:8.4.2
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: project1_user1
      MYSQL_DATABASE: orion
      MYSQL_PASSWORD_FILE: /run/secrets/database_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_INITDB_SKIP_TZINFO: "yes"
    secrets:
      - mysql_password
      - database_password
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 3
    deploy:
         replicas: 1
         restart_policy:
          condition: on-failure

  backend:
    image: citizensyd/backend:v0.45
    environment:
      SPRING_PROFILES_ACTIVE: prod
      spring.profiles.active: prod
      VIRTUAL_HOST: api.fabg.dev
      LETSENCRYPT_HOST: api.fabg.dev
      VIRTUAL_PORT: 3001
      LETSENCRYPT_EMAIL: hostinger.1qh1x@passmail.net
    ports:
      - "3001:3001"
    depends_on:
      - mysql
    networks:
      - app-network
    secrets:
      - database_url
      - database_username
      - database_password
      - jwt_key
      - cors_allowed_origins
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  frontend:
    image: citizensyd/frontend:v0.09
    environment:
      VIRTUAL_HOST: fabg.dev,www.fabg.dev
      LETSENCRYPT_HOST: fabg.dev,www.fabg.dev
      VIRTUAL_PORT: 8080
      LETSENCRYPT_EMAIL: hostinger.1qh1x@passmail.net
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://127.0.0.1:8080/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - nginx_logs:/var/log/nginx
    labels:
      com.github.nginx-proxy.nginx: ""
#      com.github.nginx-proxy.docker-gen: ""
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 60s

  acme-companion:
    image: citizensyd/acme-companion:v0.09
    command: ["/bin/bash", "/app/start.sh"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs:rw
      - vhost.d:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
      - /usr/share/nginx/html
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      VALIDATION_METHOD: dns
      DEFAULT_EMAIL: hostinger.1qh1x@passmail.net
      DNS_PROVIDER: cloudflare
      ACME_CHALLENGE: DNS-01
      DEBUG: 1
      ACMESH_DNS_API_CONFIG: |-
        DNS_API: dns_cf
        CF_Token: ${CF_API_TOKEN_SECRET}
        CF_Email: ${CF_Email_Cloudflare}
        ACME_CA_URI: https://acme-staging-v02.api.letsencrypt.org/directory
    secrets:
      - dns_cloudflare_email
      - dns_cloudflare_api_token
    depends_on:
      - nginx-proxy
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

secrets:
  mysql_password:
    external: true
  database_password:
    external: true
  database_url:
    external: true
  database_username:
    external: true
  jwt_key:
    external: true
  cors_allowed_origins:
    external: true
  dns_cloudflare_email:
    external: true
  dns_cloudflare_api_token:
    external: true


networks:
  app-network:
    driver: overlay

volumes:
  mysql_data:
  mysql_logs:
  nginx_logs:
  certs:
  acme:
  vhost.d: