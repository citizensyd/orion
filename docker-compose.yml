services:
  mysql:
    image: mysql:8.0
    environment:
      #- MYSQL_ROOT_PASSWORD=PinK1973
      #- MYSQL_DATABASE=orion
      #- MYSQL_USER=fab
      #- MYSQL_PASSWORD=PinK1973
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_password
      - MYSQL_DATABASE=orion
      - MYSQL_USER=project1_user1
      - MYSQL_PASSWORD_FILE=/run/secrets/database_password
    secrets:
      - mysql_password
      - database_password
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./Back/src/main/resources/create_orion_db.sql:/docker-entrypoint-initdb.d/create_orion_db.sql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s          # Attend 5 secondes avant de redémarrer
        max_attempts: 3     # Tentatives de redémarrage maximales : 3
        window: 120s        # Compter les tentatives sur une période de 120 secondes

  backend:
    image: citizensyd/backend:v0.15
    environment:
      - ENV=prod
      #- DATABASE_URL=jdbc:mysql://mysql:3306/orion
      #- DATABASE_USERNAME=fab
      #- DATABASE_PASSWORD=PinK1973
      #- JWT_KEY=5e1305721345a915133b670a562ae8ea123f4e6f923066fdbc39ca41f2031b80
      #- CORS_ALLOWED_ORIGINS=http://localhost:8080
    ports:
      - "3001:3001"
    depends_on:
      - mysql
    networks:
      - app-network
    secrets:
      - database_url
      - database_username
      - database_password
      - jwt_key
      - cors_allowed_origins
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 90s

  frontend:
    image: citizensyd/frontend:v0.04
    networks:
      - app-network
    ports:
      - "8080:80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any       # Toujours redémarrer en cas d'arrêt, qu'il soit réussi ou échoué
        delay: 5s
        max_attempts: 3

  nginx:
    image: citizensyd/nginx-custom:v0.02
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - nginx_logs:/var/log/nginx
      - ./nginx.conf:/etc/nginx/nginx.conf
      #- ./certbot/conf:/etc/nginx/conf.d
      #- ./certbot/www:/var/www/certbot
      #- ./certbot/letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5
        window: 60s

secrets:
  mysql_password:
    external: true
  database_password:
    external: true
  database_url:
    external: true
  database_username:
    external: true
  jwt_key:
    external: true
  cors_allowed_origins:
    external: true

networks:
  app-network:
    driver: overlay

volumes:
  mysql_data:
  nginx_logs:
