version: '3.8'

services:
  mysql:
    image: mysql:8.4.2
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: project1_user1
      MYSQL_DATABASE: orion
      MYSQL_PASSWORD_FILE: /run/secrets/database_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_INITDB_SKIP_TZINFO: "yes"
    secrets:
      - mysql_password
      - database_password
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 3
    deploy:
         replicas: 1
         restart_policy:
          condition: on-failure

  backend:
    image: citizensyd/backend:v0.45
    environment:
      SPRING_PROFILES_ACTIVE: prod
      spring.profiles.active: prod
    ports:
      - "3001:3001"
    depends_on:
      - mysql
    networks:
      - app-network
    secrets:
      - database_url
      - database_username
      - database_password
      - jwt_key
      - cors_allowed_origins
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 90s

  frontend:
    image: citizensyd/frontend:v0.07
    networks:
      - app-network
    depends_on:
      - mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:80/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: citizensyd/nginx-custom:v0.26
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_logs:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/lib/:/var/lib/letsencrypt:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 60s
      placement:
        constraints: [ node.role == manager ]
    command: ["/wait-for-it.sh", "backend:3001", "-t", "30", "--", "/wait-for-it.sh", "frontend:80", "--", "nginx", "-g", "daemon off;"]

  certbot-initial:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/lib/:/var/lib/letsencrypt/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: >
      /bin/sh -c "
      trap exit TERM;
      while :; do
      certbot renew --webroot -w /var/www/certbot --preferred-challenges http-01 --http-01-address 0.0.0.0;
      sleep 12h;
      done"
    depends_on:
      - nginx
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - app-network

secrets:
  mysql_password:
    external: true
  database_password:
    external: true
  database_url:
    external: true
  database_username:
    external: true
  jwt_key:
    external: true
  cors_allowed_origins:
    external: true
  dns_cloudflare_email:
    external: true
  dns_cloudflare_api_token:
    external: true

networks:
  app-network:
    driver: overlay
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 2001:db8:2::/64

volumes:
  mysql_data:
  mysql_logs:
  nginx_logs: